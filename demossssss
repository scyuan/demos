// pages/dateSelect/dateSelect.js

var Moment = require("../../utils/Moment.js");

var DATE_LIST = [];
var DATE_YEAR = new Date().getFullYear()
var DATE_MONTH = new Date().getMonth() + 1
var DATE_DAY = new Date().getDate()

function init(){
	
}
  data: {
    checkIn_xy: {
    },
    checkOut_xy: {
    },
    maxMonth: 3, //最多渲染月数
    dateList: [],
    systemInfo: {},
    weekStr: ['日', '一', '二', '三', '四', '五', '六'],
    checkInDate: Moment(new Date()).delete(1, 'day').format('YYYY-MM-DD'),
    checkOutDate: Moment(new Date()).format('YYYY-MM-DD'),
    markcheckInDate: false, //标记开始时间是否已经选择
    markcheckOutDate: false //标记结束时间是否已经选择
  },
  onLoad: function (options) {
    // 页面初始化 options为页面跳转所带来的参数
    this.createDateListData();
    var _this = this;
    // 页面初始化 options为页面跳转所带来的参数
    var checkInDate = options.checkInDate ? options.checkInDate : Moment(new Date()).delete(1, 'day').format('YYYY-MM-DD');
    var checkOutDate = options.checkOutDate ? options.checkOutDate : Moment(new Date()).format('YYYY-MM-DD');
    console.log(this.data.dateList.length);
    for (let i = 0; i < this.data.dateList.length; i++) {
      for (let j = 0; j < this.data.dateList[i].days.length; j++) {
        if (this.data.checkInDate.split("-")[0] == this.data.dateList[i].year && this.data.checkInDate.split("-")[1] == this.data.dateList[i].month && this.data.checkInDate.split("-")[2] == this.data.dateList[i].days[j].day) {
          this.data.checkIn_xy.x = i;
          this.data.checkIn_xy.y = this.data.dateList[i].days[j].index;
          var temp = this.data.dateList[i].days[j].class;
          temp = temp + ' active';
          this.data.dateList[i].days[j].class = temp
        }
        if (this.data.checkOutDate.split("-")[0] == this.data.dateList[i].year && this.data.checkOutDate.split("-")[1] == this.data.dateList[i].month && this.data.checkOutDate.split("-")[2] == this.data.dateList[i].days[j].day) {
          this.data.checkOut_xy.x = i;
          this.data.checkOut_xy.y = this.data.dateList[i].days[j].index;
          var temp = this.data.dateList[i].days[j].class;
          temp = temp + ' active';
          this.data.dateList[i].days[j].class = temp
        }
      }
    }
    this.setData({
      dateList: this.data.dateList
    });

    wx.getSystemInfo({
      success: function (res) {
        _this.setData({
          systemInfo: res,
          checkInDate: checkInDate,
          checkOutDate: checkOutDate,
        });
      }
    })
  },
  onReady: function () {
    // 页面渲染完成
  },
  onShow: function () {
    // 页面显示

  },
  onHide: function () {
    // 页面隐藏
  },
  onUnload: function () {
    // 页面关闭
  },
  createDateListData: function () {
    var dateList = [];
    var now = new Date();
    /*
      设置日期为 年-月-01,否则可能会出现跨月的问题
      比如：2017-01-31为now ,月份直接+1（now.setMonth(now.getMonth()+1)），则会直接跳到跳到2017-03-03月份.
        原因是由于2月份没有31号，顺推下去变成了了03-03
    */
    now = new Date(now.getFullYear(), now.getMonth() - 2, 1);
    console.log(now);
    for (var i = 0; i < this.data.maxMonth; i++) {
      var momentDate = Moment(now).add(this.data.maxMonth - (this.data.maxMonth - i), 'month').date;
      console.log(momentDate);
      var year = momentDate.getFullYear();
      var month = momentDate.getMonth() + 1;

      var days = [];
      var totalDay = this.getTotalDayByMonth(year, month);
      var week = this.getWeek(year, month, 1);
      //-week是为了使当月第一天的日期可以正确的显示到对应的周几位置上，比如星期三(week = 2)，
      //则当月的1号是从列的第三个位置开始渲染的，前面会占用-2，-1，0的位置,从1开正常渲染
      for (var j = -week + 1, k = 0; j <= totalDay; j++ , k++) {
        var tempWeek = -1;
        if (j > 0)
          tempWeek = this.getWeek(year, month, j);

        var clazz = '';
        if (tempWeek == 0 || tempWeek == 6)
          clazz = 'week'
        if (j > DATE_DAY && year == DATE_YEAR && month == DATE_MONTH) { //当天之前的日期不可用
          clazz = 'unavailable ' + clazz;
        }
        else {
          clazz = 'nostate ' + clazz
        }
        days.push({ day: j, class: clazz, index: k + '', year_index: i })
      }
      var dateItem = {
        id: year + '-' + month,
        year: year,
        month: month,
        days: days
      }

      dateList.push(dateItem);
    }
    this.setData({
      dateList: dateList
    });
    DATE_LIST = dateList;
  },
  /*
	 * 获取月的总天数
	 */
  getTotalDayByMonth: function (year, month) {
    month = parseInt(month, 10);
    var d = new Date(year, month, 0);
    return d.getDate();
  },
	/*
	 * 获取月的第一天是星期几
	 */
  getWeek: function (year, month, day) {
    var d = new Date(year, month - 1, day);
    return d.getDay();
  },
  /**
   * 点击日期事件
   */
  onPressDate: function (e) {
    var { year, month, day, index, year_index } = e.target.dataset;

    //当前选择的日期为同一个月并小于今天，或者点击了空白处（即day<0），不执行
    if ((day > DATE_DAY && month == DATE_MONTH) || day <= 0) {
      console.log(month + '--' + DATE_MONTH + '--' + day)
      return;
    }

    //如果当前点击的日期已经点击过了，再点击样式就不变。如果没有点击过，则添加active样式
    var temp_class = this.data.dateList[year_index].days[index].class;
    if (temp_class.match('active') != 'active') {
      temp_class = temp_class + " active";
    }
    this.data.dateList[year_index].days[index].class = temp_class;
    this.setData({
      dateList: this.data.dateList
    });


    var tempMonth = month;
    var tempDay = day;
    if (month < 10) tempMonth = '0' + month
    if (day < 10) tempDay = '0' + day
    var date = year + '-' + tempMonth + '-' + tempDay;

    //当前点击日期小于最大日期并且大于最小日期，则改变最大日期没当前点击日期。并移除上一个的active样式
    if (Moment(date).before(this.data.checkOutDate) && Moment(this.data.checkInDate).before(date)) {
      this.removeActiveClass(this.data.checkOut_xy.x, this.data.checkOut_xy.y, );
      this.data.checkOut_xy.x = year_index;
      this.data.checkOut_xy.y = index;
      this.setData({
        checkOutDate: date
      })
    }
    //当前点击日期小于最小日期
    if (Moment(date).before(this.data.checkInDate)) {
      this.removeActiveClass(this.data.checkIn_xy.x, this.data.checkIn_xy.y);
      this.data.checkIn_xy.x = year_index;
      this.data.checkIn_xy.y = index;
      this.setData({
        checkInDate: date
      })
    }
    //当前点击日期大于最大日期
    if (Moment(this.data.checkOutDate).before(date)) {
      this.removeActiveClass(this.data.checkOut_xy.x, this.data.checkOut_xy.y);
      this.data.checkOut_xy.x = year_index;
      this.data.checkOut_xy.y = index;
      this.setData({
        checkOutDate: date
      })
    }
  },
  removeActiveClass: function (x, y) {
    var temp_class = this.data.dateList[x].days[y].class;
    if (temp_class.match('active') == 'active') {
      temp_class = temp_class.replace("active", '');
    }
    this.data.dateList[x].days[y].class = temp_class;
    this.setData({
      dateList: this.data.dateList
    });
  }
})